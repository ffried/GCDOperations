{
  "abstract" : [
    {
      "code" : "DelayOperation",
      "type" : "codeVoice"
    },
    {
      "text" : " is an ",
      "type" : "text"
    },
    {
      "code" : "Operation",
      "type" : "codeVoice"
    },
    {
      "text" : " that will simply wait for a given time",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "interval, or until a specific ",
      "type" : "text"
    },
    {
      "code" : "Date",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/GCDOperations\/documentation\/GCDOperations"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/GCDOperations\/documentation\/GCDOperations\/DelayOperation"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:13GCDOperations14DelayOperationC",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "class"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "DelayOperation"
      }
    ],
    "modules" : [
      {
        "name" : "GCDOperations"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "DelayOperation"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Class",
    "symbolKind" : "class",
    "title" : "DelayOperation"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "Linux"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "final"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "class"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "DelayOperation"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "It is important to note that this operation does ",
              "type" : "text"
            },
            {
              "inlineContent" : [
                {
                  "text" : "not",
                  "type" : "text"
                }
              ],
              "type" : "strong"
            },
            {
              "text" : " use the ",
              "type" : "text"
            },
            {
              "code" : "sleep()",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "function, since that is inefficient and blocks the thread on which it is called.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Instead, this operation uses ",
              "type" : "text"
            },
            {
              "code" : "DispatchQueue.after",
              "type" : "codeVoice"
            },
            {
              "text" : " to know when the appropriate amount",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "of time has passed.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "If the interval is negative, or the ",
              "type" : "text"
            },
            {
              "code" : "Date",
              "type" : "codeVoice"
            },
            {
              "text" : " is in the past, then this operation",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "immediately finishes.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/GCDOperations\/17GCDCoreOperations9OperationC"
      ],
      "kind" : "relationships",
      "title" : "Inherits From",
      "type" : "inheritsFrom"
    },
    {
      "identifiers" : [
        "doc:\/\/GCDOperations\/s28CustomDebugStringConvertibleP",
        "doc:\/\/GCDOperations\/s23CustomStringConvertibleP"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/GCDOperations\/documentation\/GCDOperations\/DelayOperation\/init(interval:)",
        "doc:\/\/GCDOperations\/documentation\/GCDOperations\/DelayOperation\/init(until:)"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/GCDOperations\/documentation\/GCDOperations\/DelayOperation\/execute()"
      ],
      "title" : "Instance Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/gcdoperations\/delayoperation"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://GCDOperations/17GCDCoreOperations9OperationC": {
  "identifier" : "doc:\/\/GCDOperations\/17GCDCoreOperations9OperationC",
  "title" : "GCDCoreOperations.Operation",
  "type" : "unresolvable"
},
"doc://GCDOperations/documentation/GCDOperations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/GCDOperations\/documentation\/GCDOperations",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "GCDOperations",
  "type" : "topic",
  "url" : "\/documentation\/gcdoperations"
},
"doc://GCDOperations/documentation/GCDOperations/DelayOperation": {
  "abstract" : [
    {
      "code" : "DelayOperation",
      "type" : "codeVoice"
    },
    {
      "text" : " is an ",
      "type" : "text"
    },
    {
      "code" : "Operation",
      "type" : "codeVoice"
    },
    {
      "text" : " that will simply wait for a given time",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "interval, or until a specific ",
      "type" : "text"
    },
    {
      "code" : "Date",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DelayOperation"
    }
  ],
  "identifier" : "doc:\/\/GCDOperations\/documentation\/GCDOperations\/DelayOperation",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DelayOperation"
    }
  ],
  "role" : "symbol",
  "title" : "DelayOperation",
  "type" : "topic",
  "url" : "\/documentation\/gcdoperations\/delayoperation"
},
"doc://GCDOperations/documentation/GCDOperations/DelayOperation/execute()": {
  "abstract" : [
    {
      "text" : "inherited",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "execute"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/GCDOperations\/documentation\/GCDOperations\/DelayOperation\/execute()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "execute()",
  "type" : "topic",
  "url" : "\/documentation\/gcdoperations\/delayoperation\/execute()"
},
"doc://GCDOperations/documentation/GCDOperations/DelayOperation/init(interval:)": {
  "abstract" : [
    {
      "text" : "Creates a new delay operation, that delays for a given time interval.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "interval"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation12TimeIntervala",
      "text" : "TimeInterval"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/GCDOperations\/documentation\/GCDOperations\/DelayOperation\/init(interval:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(interval:)",
  "type" : "topic",
  "url" : "\/documentation\/gcdoperations\/delayoperation\/init(interval:)"
},
"doc://GCDOperations/documentation/GCDOperations/DelayOperation/init(until:)": {
  "abstract" : [
    {
      "text" : "Creates a new delay operation that delays until a given date.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "until"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation4DateV",
      "text" : "Date"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/GCDOperations\/documentation\/GCDOperations\/DelayOperation\/init(until:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(until:)",
  "type" : "topic",
  "url" : "\/documentation\/gcdoperations\/delayoperation\/init(until:)"
},
"doc://GCDOperations/s23CustomStringConvertibleP": {
  "identifier" : "doc:\/\/GCDOperations\/s23CustomStringConvertibleP",
  "title" : "Swift.CustomStringConvertible",
  "type" : "unresolvable"
},
"doc://GCDOperations/s28CustomDebugStringConvertibleP": {
  "identifier" : "doc:\/\/GCDOperations\/s28CustomDebugStringConvertibleP",
  "title" : "Swift.CustomDebugStringConvertible",
  "type" : "unresolvable"
}
}
}