{
  "abstract" : [
    {
      "code" : "TimeoutObserver",
      "type" : "codeVoice"
    },
    {
      "text" : " is a way to make an ",
      "type" : "text"
    },
    {
      "code" : "Operation",
      "type" : "codeVoice"
    },
    {
      "text" : " automatically time out and cancel after a specified time interval.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/GCDOperations\/documentation\/GCDOperations"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/GCDOperations\/documentation\/GCDOperations\/TimeoutObserver"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:13GCDOperations15TimeoutObserverV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "TimeoutObserver"
      }
    ],
    "modules" : [
      {
        "name" : "GCDOperations"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "TimeoutObserver"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Structure",
    "symbolKind" : "struct",
    "title" : "TimeoutObserver"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "Linux"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "struct"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "TimeoutObserver"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/GCDOperations\/17GCDCoreOperations17OperationObserverP"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/GCDOperations\/documentation\/GCDOperations\/TimeoutObserver\/TimeoutError"
      ],
      "title" : "Structures"
    },
    {
      "identifiers" : [
        "doc:\/\/GCDOperations\/documentation\/GCDOperations\/TimeoutObserver\/init(timeout:)"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/GCDOperations\/documentation\/GCDOperations\/TimeoutObserver\/operation(_:didProduce:)",
        "doc:\/\/GCDOperations\/documentation\/GCDOperations\/TimeoutObserver\/operationDidFinish(_:wasCancelled:errors:)",
        "doc:\/\/GCDOperations\/documentation\/GCDOperations\/TimeoutObserver\/operationDidStart(_:)"
      ],
      "title" : "Instance Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/gcdoperations\/timeoutobserver"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://GCDOperations/17GCDCoreOperations17OperationObserverP": {
  "identifier" : "doc:\/\/GCDOperations\/17GCDCoreOperations17OperationObserverP",
  "title" : "GCDCoreOperations.OperationObserver",
  "type" : "unresolvable"
},
"doc://GCDOperations/documentation/GCDOperations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/GCDOperations\/documentation\/GCDOperations",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "GCDOperations",
  "type" : "topic",
  "url" : "\/documentation\/gcdoperations"
},
"doc://GCDOperations/documentation/GCDOperations/TimeoutObserver": {
  "abstract" : [
    {
      "code" : "TimeoutObserver",
      "type" : "codeVoice"
    },
    {
      "text" : " is a way to make an ",
      "type" : "text"
    },
    {
      "code" : "Operation",
      "type" : "codeVoice"
    },
    {
      "text" : " automatically time out and cancel after a specified time interval.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TimeoutObserver"
    }
  ],
  "identifier" : "doc:\/\/GCDOperations\/documentation\/GCDOperations\/TimeoutObserver",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TimeoutObserver"
    }
  ],
  "role" : "symbol",
  "title" : "TimeoutObserver",
  "type" : "topic",
  "url" : "\/documentation\/gcdoperations\/timeoutobserver"
},
"doc://GCDOperations/documentation/GCDOperations/TimeoutObserver/TimeoutError": {
  "abstract" : [
    {
      "text" : "The error that a timed out operation is cancelled with.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TimeoutError"
    }
  ],
  "identifier" : "doc:\/\/GCDOperations\/documentation\/GCDOperations\/TimeoutObserver\/TimeoutError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TimeoutError"
    }
  ],
  "role" : "symbol",
  "title" : "TimeoutObserver.TimeoutError",
  "type" : "topic",
  "url" : "\/documentation\/gcdoperations\/timeoutobserver\/timeouterror"
},
"doc://GCDOperations/documentation/GCDOperations/TimeoutObserver/init(timeout:)": {
  "abstract" : [
    {
      "text" : "Creates a new TimeoutObserver with the given timeout.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "timeout"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation12TimeIntervala",
      "text" : "TimeInterval"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/GCDOperations\/documentation\/GCDOperations\/TimeoutObserver\/init(timeout:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(timeout:)",
  "type" : "topic",
  "url" : "\/documentation\/gcdoperations\/timeoutobserver\/init(timeout:)"
},
"doc://GCDOperations/documentation/GCDOperations/TimeoutObserver/operation(_:didProduce:)": {
  "abstract" : [
    {
      "text" : "inherited",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "operation"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17GCDCoreOperations12GCDOperationa",
      "text" : "GCDOperation"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "didProduce"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17GCDCoreOperations12GCDOperationa",
      "text" : "GCDOperation"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/GCDOperations\/documentation\/GCDOperations\/TimeoutObserver\/operation(_:didProduce:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "operation(_:didProduce:)",
  "type" : "topic",
  "url" : "\/documentation\/gcdoperations\/timeoutobserver\/operation(_:didproduce:)"
},
"doc://GCDOperations/documentation/GCDOperations/TimeoutObserver/operationDidFinish(_:wasCancelled:errors:)": {
  "abstract" : [
    {
      "text" : "inherited",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "operationDidFinish"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17GCDCoreOperations12GCDOperationa",
      "text" : "GCDOperation"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "wasCancelled"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "errors"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "])"
    }
  ],
  "identifier" : "doc:\/\/GCDOperations\/documentation\/GCDOperations\/TimeoutObserver\/operationDidFinish(_:wasCancelled:errors:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "operationDidFinish(_:wasCancelled:errors:)",
  "type" : "topic",
  "url" : "\/documentation\/gcdoperations\/timeoutobserver\/operationdidfinish(_:wascancelled:errors:)"
},
"doc://GCDOperations/documentation/GCDOperations/TimeoutObserver/operationDidStart(_:)": {
  "abstract" : [
    {
      "text" : "inherited",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "operationDidStart"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17GCDCoreOperations12GCDOperationa",
      "text" : "GCDOperation"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/GCDOperations\/documentation\/GCDOperations\/TimeoutObserver\/operationDidStart(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "operationDidStart(_:)",
  "type" : "topic",
  "url" : "\/documentation\/gcdoperations\/timeoutobserver\/operationdidstart(_:)"
}
}
}