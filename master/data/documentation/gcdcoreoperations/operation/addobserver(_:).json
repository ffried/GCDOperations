{
  "abstract" : [
    {
      "text" : "Adds an observer to this operation. The observer will get all calls that remain for this operation.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "If added to a running operation, the observer will only be notified of produced operations and finishing of this operation.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "If “added” to a finished operation, the observer will not be added to the list of observers",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "and the ",
      "type" : "text"
    },
    {
      "code" : "operationDidFinish(_:wasCancelled:errors:)",
      "type" : "codeVoice"
    },
    {
      "text" : " method will be called instantly on the observer.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/GCDCoreOperations\/documentation\/GCDCoreOperations",
        "doc:\/\/GCDCoreOperations\/documentation\/GCDCoreOperations\/Operation"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/GCDCoreOperations\/documentation\/GCDCoreOperations\/Operation\/addObserver(_:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:17GCDCoreOperations9OperationC11addObserveryyxAA0cE0RzlF",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "addObserver"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "Observer"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Observer"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "modules" : [
      {
        "name" : "GCDCoreOperations"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "addObserver(_:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "Linux"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "final"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "addObserver"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "Observer"
            },
            {
              "kind" : "text",
              "text" : ">("
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "observer"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Observer"
            },
            {
              "kind" : "text",
              "text" : ") "
            },
            {
              "kind" : "keyword",
              "text" : "where"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Observer"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "identifier" : "doc:\/\/GCDCoreOperations\/documentation\/GCDCoreOperations\/OperationObserver",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:17GCDCoreOperations17OperationObserverP",
              "text" : "OperationObserver"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The observer to add to this operation.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "observer"
        }
      ]
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/gcdcoreoperations\/operation\/addobserver(_:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://GCDCoreOperations/documentation/GCDCoreOperations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/GCDCoreOperations\/documentation\/GCDCoreOperations",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "GCDCoreOperations",
  "type" : "topic",
  "url" : "\/documentation\/gcdcoreoperations"
},
"doc://GCDCoreOperations/documentation/GCDCoreOperations/Operation": {
  "abstract" : [
    {
      "text" : "The (abstract) base class for an operation.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "An operation is an “isolated” piece of work, that will be enqueued and executed on an ",
      "type" : "text"
    },
    {
      "code" : "OperationQueue",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "Operation",
      "type" : "codeVoice"
    },
    {
      "text" : " is considered an abstract class and cannot be used directly. Create a subclass and override ",
      "type" : "text"
    },
    {
      "code" : "execute",
      "type" : "codeVoice"
    },
    {
      "text" : " instead.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Operation"
    }
  ],
  "identifier" : "doc:\/\/GCDCoreOperations\/documentation\/GCDCoreOperations\/Operation",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Operation"
    }
  ],
  "role" : "symbol",
  "title" : "Operation",
  "type" : "topic",
  "url" : "\/documentation\/gcdcoreoperations\/operation"
},
"doc://GCDCoreOperations/documentation/GCDCoreOperations/Operation/addObserver(_:)": {
  "abstract" : [
    {
      "text" : "Adds an observer to this operation. The observer will get all calls that remain for this operation.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "If added to a running operation, the observer will only be notified of produced operations and finishing of this operation.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "If “added” to a finished operation, the observer will not be added to the list of observers",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "and the ",
      "type" : "text"
    },
    {
      "code" : "operationDidFinish(_:wasCancelled:errors:)",
      "type" : "codeVoice"
    },
    {
      "text" : " method will be called instantly on the observer.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "addObserver"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Observer"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Observer"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/GCDCoreOperations\/documentation\/GCDCoreOperations\/Operation\/addObserver(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "addObserver(_:)",
  "type" : "topic",
  "url" : "\/documentation\/gcdcoreoperations\/operation\/addobserver(_:)"
},
"doc://GCDCoreOperations/documentation/GCDCoreOperations/OperationObserver": {
  "abstract" : [
    {
      "text" : "Describes a type that observers operations.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OperationObserver"
    }
  ],
  "identifier" : "doc:\/\/GCDCoreOperations\/documentation\/GCDCoreOperations\/OperationObserver",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OperationObserver"
    }
  ],
  "role" : "symbol",
  "title" : "OperationObserver",
  "type" : "topic",
  "url" : "\/documentation\/gcdcoreoperations\/operationobserver"
}
}
}